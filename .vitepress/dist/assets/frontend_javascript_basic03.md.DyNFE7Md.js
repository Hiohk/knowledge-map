import{$ as o,U as s,c as a,aA as n,ab as e,S as i}from"./chunks/framework.BDLhZlrp.js";const k=JSON.parse('{"title":"3. 原生函数","description":"","frontmatter":{"prev":{"text":"数组、字符串和数字","link":"/frontend/javascript/basic02"},"next":{"text":"强制类型转换","link":"/frontend/javascript/basic04"}},"headers":[],"relativePath":"frontend/javascript/basic03.md","filePath":"frontend/javascript/basic03.md","lastUpdated":1722420014000}'),c={name:"frontend/javascript/basic03.md"},_=n('<h1 id="_3-原生函数" tabindex="-1">3. 原生函数 <a class="header-anchor" href="#_3-原生函数" aria-label="Permalink to &quot;3. 原生函数&quot;">​</a></h1><h2 id="_3-1-内不能属性-class" tabindex="-1">3.1 内不能属性 [[Class]] <a class="header-anchor" href="#_3-1-内不能属性-class" aria-label="Permalink to &quot;3.1 内不能属性 [[Class]]&quot;">​</a></h2><h2 id="_3-2-封装对象包装" tabindex="-1">3.2 封装对象包装 <a class="header-anchor" href="#_3-2-封装对象包装" aria-label="Permalink to &quot;3.2 封装对象包装&quot;">​</a></h2><h2 id="_3-3-拆封" tabindex="-1">3.3 拆封 <a class="header-anchor" href="#_3-3-拆封" aria-label="Permalink to &quot;3.3 拆封&quot;">​</a></h2><h2 id="_3-4-原生函数作为构造函数" tabindex="-1">3.4 原生函数作为构造函数 <a class="header-anchor" href="#_3-4-原生函数作为构造函数" aria-label="Permalink to &quot;3.4 原生函数作为构造函数&quot;">​</a></h2><h2 id="_3-5-总结" tabindex="-1">3.5 总结 <a class="header-anchor" href="#_3-5-总结" aria-label="Permalink to &quot;3.5 总结&quot;">​</a></h2>',6);function l(d,h,p,b,f,m){const t=e("a-back-top"),r=e("reading-progress-bar");return i(),s("div",null,[_,a(t),a(r)])}const q=o(c,[["render",l]]);export{k as __pageData,q as default};
